chrome.runtime.onInstalled.addListener(()=>{console.log("Glass PDF extension installed")});chrome.runtime.onMessage.addListener((c,i,r)=>c.action==="captureVisibleTab"?(chrome.tabs.captureVisibleTab({format:"png"},t=>{chrome.runtime.lastError?(console.error(chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):r({success:!0,dataUrl:t})}),!0):c.action==="generatePdf"?(chrome.tabs.query({active:!0,currentWindow:!0},t=>{t[0].id&&chrome.tabs.print({tabId:t[0].id},e=>{chrome.runtime.lastError?(console.error("Print API failed:",chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):e?chrome.storage.local.set({generatedPdfDataUrl:e},()=>{chrome.tabs.create({url:chrome.runtime.getURL("src/viewer/index.html")}),r({success:!0})}):r({success:!1,error:"No data URL received from print API."})})}),!0):(c.action==="generatePdfWithCanvas"&&chrome.tabs.query({active:!0,currentWindow:!0},t=>{t[0].id&&chrome.scripting.executeScript({target:{tabId:t[0].id},function:()=>new Promise(e=>{chrome.runtime.sendMessage({action:"capturePageForPdf"},a=>{a.success?e(a.imageData):e(null)})})},e=>{if(e&&e[0]&&e[0].result){const a=e[0].result;chrome.storage.local.set({generatedPdfDataUrl:a},()=>{chrome.tabs.create({url:chrome.runtime.getURL("src/viewer/index.html")}),r({success:!0})})}else r({success:!1,error:"Failed to capture page with canvas."})})}),!0));
